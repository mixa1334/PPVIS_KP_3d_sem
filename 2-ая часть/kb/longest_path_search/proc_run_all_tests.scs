scp_program -> proc_run_all_tests (*
	-> rrel_params: ... ;;

	-> rrel_operators: ... (*

		-> rrel_init: ..print_begin (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Начало программы];;
			=> nrel_goto: ..run_test_1;;////////////////////////////
			/////////////////////////////////
			//////////////начали с третьего(4) а не с первого
		*);;

		-> ..run_test_1 (*
			<- call;;
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_main;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*

				-> rrel_1: rrel_fixed: rrel_scp_const: graph1;;

				-> rrel_2: rrel_fixed: rrel_scp_const: [1];;

			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: ..wait_test_1;;
		*);;

		-> ..wait_test_1 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=> nrel_goto: ..run_test_2;;
		*);;

		-> ..run_test_2 (*
			<- call;;
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_main;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_const: graph2;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [2];;
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: ..wait_test_2;;
		*);;

		-> ..wait_test_2 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=> nrel_goto: ..run_test_3;;
		*);;
//////////////////////////////////пропустил 3-ий тест!!!!!!!!!
		-> ..run_test_3 (*
			<- call;;
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_main;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_const: graph3;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [3];;
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: ..wait_test_3;;
		*);;

		-> ..wait_test_3 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=> nrel_goto: ..run_test_4;;
		*);;

		-> ..run_test_4 (*
			<- call;;
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_main;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_const: graph4;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [4];;
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: ..wait_test_4;;
			*);;

		-> ..wait_test_4 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=> nrel_goto: ..test_5;;
		*);;

		-> ..test_5 (*
			<- call;;
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_main;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_const: graph5;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [5];;
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: ..wait_test_5;;
		*);;

		-> ..wait_test_5 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=> nrel_goto: ..print_end;;
		*);;

		-> ..print_end (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Программа завершена];;
			=> nrel_goto: ..operator_return;;
		*);;

		-> ..operator_return (*
			<- return;;
		*);;
	*);;
*);;
